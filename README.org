# -*- mode: org; default-input-method: TeX; -*-
#+OPTIONS: toc:nil num:nil

* Intro
This is a collection of utilities and classes for Error Bank analysis
for the *LHCb VErtex LOcator*.

+ A rudimentary parser that reads ascii tables from Vetra logs.
+ Two classes, =PCNError= and =PCNErrorMap=, to analyse PCN errors in
  the *VELO*.


* Log parser
Since it takes days to run over a dataset with Vetra, the "parser"
(parserPCNErrors) tries to read ascii tables from the Vetra log files
(using some =sed= foo) and reads it into a ROOT tree. This is then
dumped to a ROOT file for further analysis.

/Usage/:
: $ ./parsePCNErrors [options] --file <input log file>
: 
:    --file    Log file with input data in an ascii table, e.g.
:              | col1 | col2 |
:              |------+------|
:              |   34 | 1010 |
: 
:    --header  Table header string for TTree::ReadFile() (default below).
:              runNo/L:eventID/L:tell1/I:ExpPCN/I:Beetle/I:expbits/C:badbits/C
: 
:    --temp    Temporary file to use (default: /tmp/PCNErrors.txt).
: 
:    --output  ROOT file to dump TTree.
 
/How to build/:
: $ g++ -o parsePCNErrors -Wall $(root-config --cflags --libs) parsePCNErrors.cc


* Pipeline Column Number (PCN) error map
The VELO keeps a pipeline buffer as it records events. It keeps track
of this buffer with an eight bit number called the /Pipeline Column
Number/. There can be desynchronisation errors in these PCNs, which
might affect data quality. These two classes are used to analyse these
PCN errors.

/How to build/:
: $ g++ -o makePCNErrorMap -Wall $(root-config --cflags --libs) PCNErrorTool.cc PCNErrorMap.cxx

** =PCNError=
This =class= defines a PCN error in the terms of the expected (correct)
PCN and the exclusive OR of the faulty PCN value with the correct PCN.

: _xor = _good_pcn xor _bad_pcn

This picks out the flipped bits.

** =PCNErrorMap=
This =class= defines an error map[fn:1] with all the Beetle chips
reporting PCN errors and a bitwise map[fn:2] for all the faulty Beetle
chips. The underlying maps in both cases are represented as
2-dimensional histograms.

The PCN error map is also stored as sparse error map in the STL map
=ErrCounter=. The class =Key= reimplements this sparse error map. This
might be used in the future if there is any need for a more user
friendly interface.


* Documentation
+ GitHub pages - http://suvayu.github.com/Velo-EB/
+ Class documentation - [[http://suvayu.github.com/Velo-EB/docs/html/index.html][Doxygen html documentation]]


* Authors
Suvayu Ali


* Download
You can download this project in either [[https://github.com/suvayu/Velo-EB/zipball/master][zip]] or [[https://github.com/suvayu/Velo-EB/tarball/master][tar]] formats. You can
also clone the project with Git by running:

: $ git clone git://github.com/suvayu/Velo-EB


* Footnotes

[fn:1] The =hBeetleMap= histogram
[fn:2] The =hperBeetleBitMap= histogram
